## Common parameters
# -- partially overrides common.names.name
nameOverride: ""
# -- fully override common.names.fullname
fullnameOverride: "prefect-worker"
# -- fully override common.names.namespace
namespaceOverride: ""
# -- labels to add to all deployed objects
commonLabels: {}
# -- annotations to add to all deployed objects
commonAnnotations: {}

## Deployment Configuration
worker:
  # -- unique cluster identifier, if none is provided this value will be infered at time of helm install
  clusterUid: ""

  image:
    # -- agent image repository
    repository: prefecthq/prefect
    ## prefect tag is pinned to the latest available image tag at packaging time.  Update the value here to
    ## override pinned tag
    # -- prefect image tag (immutable tags are recommended)
    prefectTag: 2-python3.11-kubernetes
    # -- agent image pull policy
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    # -- agent image pull secrets
    pullSecrets: []
    # -- enable agent image debug mode
    debug: false

  ## general configuration of the agent
  config:
    # -- name of prefect workpool the agent will poll; if workpool or workqueues
    # is not provided, we use the default queue
    workPool: ""
    # -- how often the agent will query for runs
    queryInterval: 5
    # -- when querying for runs, how many seconds in the future can they be scheduled
    prefetchSeconds: 10
    # -- connect using HTTP/2 if the server supports it (experimental)
    http2: true

  ## connection settings
  # -- one of 'cloud' or 'server'
  apiConfig: "cloud"

  cloudApiConfig:
    # -- prefect account ID
    accountId: ""
    # -- prefect workspace ID
    workspaceId: ""

    apiKeySecret:
      # -- prefect API secret name
      name: prefect-api-key
      # -- prefect API secret key
      key: key

    # -- prefect cloud API url; the full URL is constructed as https://cloudUrl/accounts/accountId/workspaces/workspaceId
    cloudUrl: https://api.prefect.cloud/api

  serverApiConfig:
    # -- prefect API url (PREFECT_API_URL); should be in-cluster URL if the agent is deployed in the same cluster as the API
    apiUrl: http://127.0.0.1:4200/api

  # -- number of agent replicas to deploy
  replicaCount: 1

  resources:
    # -- the requested resources for the agent container
    requests:
      memory: 256Mi
      cpu: 100m
    # -- the requested limits for the agent container
    limits:
      memory: 1Gi
      cpu: 1000m

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  podSecurityContext:
    # -- set agent pod's security context runAsUser
    runAsUser: 1001
    # -- set agent pod's security context runAsNonRoot
    runAsNonRoot: true
    # -- set agent pod's security context fsGroup
    fsGroup: 1001

  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  containerSecurityContext:
    # -- set agent containers' security context runAsUser
    runAsUser: 1001
    # -- set agent containers' security context runAsNonRoot
    runAsNonRoot: true
    # -- set agent containers' security context readOnlyRootFilesystem
    readOnlyRootFilesystem: true
    # -- set agent containers' security context allowPrivilegeEscalation
    allowPrivilegeEscalation: false

  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  # -- extra labels for agent pod
  podLabels: {}

  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  # -- extra annotations for agent pod
  podAnnotations: {}

  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  # -- affinity for agent pods assignment
  affinity: {}

  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  # -- node labels for agent pods assignment
  nodeSelector: {}

  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  # -- tolerations for agent pods assignment
  tolerations: []

  ## List of extra env vars
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  # -- array with extra environment variables to add to agent nodes
  extraEnvVars: []

  # -- name of existing ConfigMap containing extra env vars to add to agent nodes
  extraEnvVarsCM: ""

  # -- name of existing Secret containing extra env vars to add to agent nodes
  extraEnvVarsSecret: ""

  # -- additional sidecar containers
  extraContainers: []

  # -- array with extra volumes for the agent pod
  extraVolumes: []

  # -- array with extra volumeMounts for the agent pod
  extraVolumeMounts: []

## ServiceAccount configuration
serviceAccount:
  # -- specifies whether a ServiceAccount should be created
  create: true
  # -- the name of the ServiceAccount to use. if not set and create is true, a name is generated using the common.names.fullname template
  name: ""
  # -- additional service account annotations (evaluated as a template)
  annotations: {}

## Role configuration
role:
  ## List of extra role permissions
  ## e.g:
  ## extraPermissions:
  ##  - apiGroups: [""]
  ##    resources: ["pods", "services"]
  ##    verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  # -- array with extra permissions to add to the agent role
  extraPermissions: []
