{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "nameOverride": {
      "type": "string",
      "title": "Name Override",
      "description": "partially overrides common.names.name",
      "form": true
    },
    "fullnameOverride": {
      "type": "string",
      "title": "Fullname Override",
      "description": "fully override common.names.fullname",
      "form": true
    },
    "namespaceOverride": {
      "type": "string",
      "title": "Namespace Override",
      "description": "fully override common.names.namespace",
      "form": true
    },
    "commonLabels": {
      "type": "object",
      "title": "Common Labels",
      "description": "labels to add to all deployed objects",
      "form": true
    },
    "commonAnnotations": {
      "type": "object",
      "title": "Common Annotations",
      "description": "annotations to add to all deployed objects",
      "form": true
    },
    "worker": {
      "type": "object",
      "title": "Worker",
      "description": "worker configuration",
      "form": true,
      "additionalProperties": false,
      "properties": {
        "clusterUid": {
          "type": "string",
          "title": "Cluster UID",
          "description": "unique cluster identifier, if none is provided this value will be infered at time of helm install",
          "form": true
        },
        "image": {
          "type": "object",
          "title": "Image",
          "description": "worker image configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "repository": {
              "type": "string",
              "title": "Repository",
              "description": "worker image repository",
              "form": true
            },
            "prefectTag": {
              "type": "string",
              "title": "Tag",
              "description": "worker image tag",
              "form": true
            },
            "pullPolicy": {
              "type": "string",
              "title": "Pull Policy",
              "description": "worker image pull policy",
              "form": true
            },
            "pullSecrets": {
              "type": "array",
              "title": "Pull Secrets",
              "description": "worker image pull secrets",
              "form": true,
              "items": {
                "type": "string"
              }
            },
            "debug": {
              "type": "boolean",
              "title": "Debug",
              "description": "worker image debug mode",
              "form": true
            }
          }
        },
        "config": {
          "type": "object",
          "title": "Config",
          "description": "general configuration of the worker",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "workPool": {
              "type": "string",
              "title": "Work Pool",
              "description": "the work pool that your started worker will poll.",
              "form": true
            },
            "workQueues": {
              "type": "array",
              "title": "Work Queues",
              "description": "one or more work queue names for the worker to pull from. if not provided, the worker will pull from all work queues in the work pool",
              "form": true,
              "items": {
                "type": "string"
              }
            },
            "queryInterval": {
              "type": "integer",
              "title": "Query Interval",
              "description": "how often the worker will query for runs",
              "form": true
            },
            "prefetchSeconds": {
              "type": "integer",
              "title": "Prefetch Seconds",
              "description": "when querying for runs, how many seconds in the future can they be scheduled",
              "form": true
            },
            "http2": {
              "type": "boolean",
              "title": "HTTP2",
              "description": "connect using HTTP/2 if the server supports it (experimental)",
              "form": true
            },
            "limit": {
              "type": ["integer", "null"],
              "title": "Limit",
              "description": "Maximum number of flow runs to start simultaneously (default: unlimited)",
              "form": true
            },
            "name": {
              "type": ["string", "null"],
              "title": "Name",
              "description": "The name to give to the started worker. If not provided, a unique name will be generated.",
              "form": true
            },
            "installPolicy": {
              "type": "string",
              "title": "Install Policy",
              "description": "Install policy to use workers from Prefect integration packages.",
              "form": true
            },
            "type": {
              "type": "string",
              "title": "Type",
              "description": "the type of worker to start i.e kubernetes",
              "form": true
            },
            "baseJobTemplateName": {
              "type": ["string", "null"],
              "title": "Base Job Template Name",
              "description": "Template name of the base job template. If unspecified, Prefect will use the default base job template name for the given worker type..",
              "form": true
            },
            "baseJobTemplate": {
              "type": ["string", "null"],
              "title": "Base Job Template",
              "description": "JSON formatted base job template. If unspecified, Prefect will use the default base job template for the given worker type. If the work pool already exists, this will be ignored.",
              "form": true
            }
          }
        },
        "apiConfig": {
          "type": "string",
          "title": "API Config",
          "description": "one of 'cloud' or 'server'",
          "form": true
        },
        "cloudApiConfig": {
          "type": "object",
          "title": "Cloud API Config",
          "description": "cloud api configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "accountId": {
              "type": "string",
              "title": "Account ID",
              "description": "prefect account ID",
              "form": true
            },
            "workspaceId": {
              "type": "string",
              "title": "Workspace ID",
              "description": "prefect workspace ID",
              "form": true
            },
            "apiKeySecret": {
              "type": "object",
              "title": "API Key Secret",
              "description": "prefect api key secret",
              "form": true,
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "prefect API secret name",
                  "form": true
                },
                "key": {
                  "type": "string",
                  "title": "Key",
                  "description": "prefect API secret key",
                  "form": true
                }
              }
            },
            "cloudUrl": {
              "type": "string",
              "title": "Cloud URL",
              "description": "prefect cloud url",
              "form": true
            }
          }
        },
        "selfHostedApiConfig": {
          "type": "object",
          "title": "Self Hosted API Config",
          "description": "self hosted api configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "accountId": {
              "type": "string",
              "title": "Account ID",
              "description": "prefect account ID",
              "form": true
            },
            "workspaceId": {
              "type": "string",
              "title": "Workspace ID",
              "description": "prefect workspace ID",
              "form": true
            },
            "apiKeySecret": {
              "type": "object",
              "title": "API Key Secret",
              "description": "prefect api key secret",
              "form": true,
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name",
                  "description": "prefect API secret name",
                  "form": true
                },
                "key": {
                  "type": "string",
                  "title": "Key",
                  "description": "prefect API secret key",
                  "form": true
                }
              }
            },
            "uiUrl": {
              "type": "string",
              "title": "Self Hosted Cloud URL",
              "description": "self hosted cloud url",
              "form": true
            },
            "apiUrl": {
              "type": "string",
              "title": "Self Hosted API URL",
              "description": "self hosted API url (PREFECT_API_URL)",
              "form": true
            }
          }
        },
        "serverApiConfig": {
          "type": "object",
          "title": "Server API Config",
          "description": "server api configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "apiUrl": {
              "type": "string",
              "title": "API",
              "description": "prefect API url (PREFECT_API_URL)",
              "form": true
            },
            "uiUrl": {
              "type": "string",
              "title": "UI",
              "description": "prefect UI url",
              "form": true
            }
          }
        },
        "replicaCount": {
          "type": "integer",
          "title": "Replica Count",
          "description": "number of worker replicas to deploy",
          "form": true
        },
        "resources": {
          "type": "object",
          "title": "Resources",
          "description": "worker resource configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "requests": {
              "type": "object",
              "title": "Requests",
              "description": "the requested resources for the worker container",
              "form": true,
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": "string",
                  "title": "CPU",
                  "description": "worker resource request cpu",
                  "form": true
                },
                "memory": {
                  "type": "string",
                  "title": "Memory",
                  "description": "worker resource request memory",
                  "form": true
                }
              }
            },
            "limits": {
              "type": "object",
              "title": "Limits",
              "description": "the requested limits for the worker container",
              "form": true,
              "additionalProperties": false,
              "properties": {
                "cpu": {
                  "type": "string",
                  "title": "CPU",
                  "description": "worker resource limit cpu",
                  "form": true
                },
                "memory": {
                  "type": "string",
                  "title": "Memory",
                  "description": "worker resource limit memory",
                  "form": true
                }
              }
            }
          }
        },
        "livenessProbe": {
          "type": "object",
          "title": "Liveness Probe",
          "description": "worker liveness probe configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "enabled": {
              "type": "boolean",
              "title": "Enabled",
              "description": "enable worker liveness probe",
              "form": true
            },
            "config": {
              "type": "object",
              "title": "Config",
              "description": "worker liveness probe configuration",
              "form": true,
              "additionalProperties": false,
              "properties": {
                "initialDelaySeconds": {
                  "type": "integer",
                  "title": "Initial Delay Seconds",
                  "description": "The number of seconds to wait before starting the first probe.",
                  "form": true
                },
                "periodSeconds": {
                  "type": "integer",
                  "title": "Period Seconds",
                  "description": "The number of seconds to wait between consecutive probes.",
                  "form": true
                },
                "timeoutSeconds": {
                  "type": "integer",
                  "title": "Timeout Seconds",
                  "description": "number of seconds after which the probe times out",
                  "form": true
                },
                "successThreshold": {
                  "type": "integer",
                  "title": "Success Threshold",
                  "description": "The minimum consecutive successes required to consider the probe successful.",
                  "form": true
                },
                "failureThreshold": {
                  "type": "integer",
                  "title": "Failure Threshold",
                  "description": "The number of consecutive failures allowed before considering the probe as failed.",
                  "form": true
                }
              }
            }
          }
        },
        "podSecurityContext": {
          "type": "object",
          "title": "Pod Security Context",
          "description": "worker pod security context configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "fsGroup": {
              "type": "integer",
              "title": "FS Group",
              "description": "set worker pod's security context fsGroup",
              "form": true
            },
            "runAsNonRoot": {
              "type": "boolean",
              "title": "Run As Non Root",
              "description": "set worker pod's security context runAsNonRoot",
              "form": true
            },
            "runAsUser": {
              "type": "integer",
              "title": "Run As User",
              "description": "set worker pod's security context runAsUser",
              "form": true
            }
          }
        },
        "priorityClassName": {
          "type": "string",
          "title": "Priority Class Name",
          "description": "priority class name to use for the worker pods; if the priority class is empty or doesn't exist, the worker pods are scheduled without a priority class",
          "form": true
        },
        "containerSecurityContext": {
          "type": "object",
          "title": "Container Security Context",
          "description": "worker container security context configuration",
          "form": true,
          "additionalProperties": false,
          "properties": {
            "allowPrivilegeEscalation": {
              "type": "boolean",
              "title": "Allow Privilege Escalation",
              "description": "set worker containers' security context allowPrivilegeEscalation",
              "form": true
            },
            "readOnlyRootFilesystem": {
              "type": "boolean",
              "title": "Read Only Root Filesystem",
              "description": "set worker containers' security context readOnlyRootFilesystem",
              "form": true
            },
            "runAsNonRoot": {
              "type": "boolean",
              "title": "Run As Non Root",
              "description": "set worker containers' security context runAsNonRoot",
              "form": true
            },
            "runAsUser": {
              "type": "integer",
              "title": "Run As User",
              "description": "set worker containers' security context runAsUser",
              "form": true
            }
          }
        },
        "podLabels": {
          "type": "object",
          "title": "Pod Labels",
          "description": "extra labels for worker pod",
          "form": true
        },
        "podAnnotations": {
          "type": "object",
          "title": "Pod Annotations",
          "description": "extra annotations for worker pod",
          "form": true
        },
        "affinity": {
          "type": "object",
          "title": "Affinity",
          "description": "affinity for worker pods assignment",
          "form": true
        },
        "nodeSelector": {
          "type": "object",
          "title": "Node Selector",
          "description": "node labels for worker pods assignment",
          "form": true
        },
        "tolerations": {
          "type": "array",
          "title": "Tolerations",
          "description": "tolerations for worker pods assignment",
          "form": true,
          "items": {
            "type": "object"
          }
        },
        "extraEnvVars": {
          "type": "array",
          "title": "Extra Env Vars",
          "description": "extra environment variables to add to worker pods",
          "form": true
        },
        "extraEnvVarsCM": {
          "type": "string",
          "title": "Extra Env Vars ConfigMap",
          "description": "name of existing ConfigMap containing extra env vars to add to server nodes",
          "form": true
        },
        "extraEnvVarsSecret": {
          "type": "string",
          "title": "Extra Env Vars Secret",
          "description": "name of existing Secret containing extra env vars to add to server nodes",
          "form": true
        },
        "extraContainers": {
          "type": "array",
          "title": "Extra Containers",
          "description": "additional sidecar containers",
          "form": true,
          "items": {
            "type": "object"
          }
        },
        "extraVolumes": {
          "type": "array",
          "title": "Extra Volumes",
          "description": "array with extra volumes for the server pod",
          "form": true,
          "items": {
            "type": "object"
          }
        },
        "extraVolumeMounts": {
          "type": "array",
          "title": "Extra Volume Mounts",
          "description": "array with extra volumeMounts for the server pod",
          "form": true,
          "items": {
            "type": "object"
          }
        }
      }
    },
    "serviceAccount": {
      "type": "object",
      "title": "Service Account",
      "description": "service account configuration",
      "form": true,
      "additionalProperties": false,
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create",
          "description": "create service account",
          "form": true
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "name of the service account to use",
          "form": true
        },
        "annotations": {
          "type": "object",
          "title": "Annotations",
          "description": "annotations to add to the service account",
          "form": true
        }
      }
    },
    "role": {
      "type": "object",
      "title": "Role",
      "description": "role configuration",
      "form": true,
      "additionalProperties": false,
      "properties": {
        "extraPermissions": {
          "type": "array",
          "title": "Extra Permissions",
          "description": "extra permissions to add to the role",
          "form": true
        }
      }
    },
    "common": {
      "type": "object",
      "title": "Common",
      "description": "common configuration.  Not set by user but required as common vars are passed to all manifests.",
      "form": true
    },
    "global": {
      "type": "object",
      "title": "Global",
      "description": "global configuration.  Not set by user but required when prefect is referenced as a downstream Chart",
      "form": true
    }
  }
}
