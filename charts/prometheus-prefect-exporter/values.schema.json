{
  "$schema": "http://json-schema.org/schema#",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "revisionHistoryLimit": {
      "type": "integer",
      "title": "Revision History Limit",
      "description": "the number of old ReplicaSets to retain to allow rollback"
    },
    "replicaCount": {
      "type": "integer",
      "title": "Replica Count",
      "description": "Number of replicas to deploy"
    },
    "image": {
      "type": "object",
      "title": "Image",
      "description": "Image to deploy",
      "properties": {
        "repository": {
          "type": "string",
          "title": "Repository",
          "description": "Image repository"
        },
        "tag": {
          "type": "string",
          "title": "Tag",
          "description": "Image tag"
        },
        "pullPolicy": {
          "type": "string",
          "title": "Pull Policy",
          "description": "Image pull policy"
        }
      }
    },
    "nameOverride": {
      "type": "string",
      "title": "Name Override",
      "description": "Override the name of the chart"
    },
    "fullnameOverride": {
      "type": "string",
      "title": "Fullname Override",
      "description": "Override the fullname of the chart"
    },
    "imagePullSecrets": {
      "type": "array",
      "title": "Image Pull Secrets",
      "description": "Image pull secrets"
    },
    "serviceAccount": {
      "type": "object",
      "title": "Service Account",
      "description": "Service account",
      "properties": {
        "create": {
          "type": "boolean",
          "title": "Create",
          "description": "Create service account"
        },
        "annotations": {
          "type": "object",
          "title": "Annotations",
          "description": "Service account annotations"
        },
        "name": {
          "type": "string",
          "title": "Name",
          "description": "Service account name"
        }
      }
    },
    "prefectApiUrl": {
      "type": "string",
      "title": "Prefect API URL",
      "description": "Prefect API URL"
    },
    "csrfAuth": {
      "type": "boolean",
      "title": "CSRF Auth",
      "description": "Enable CSRF auth"
    },
    "pagination": {
      "type": "object",
      "title": "Pagination",
      "description": "Pagination settings",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable pagination"
        },
        "limit": {
          "type": "integer",
          "title": "Limit",
          "description": "Pagination limit"
        }
      }
    },
    "env": {
      "type": "object",
      "title": "Environment Variables",
      "description": "Environment variables"
    },
    "podDisruptionBudget": {
      "type": "object",
      "title": "Pod Disruption Budget",
      "description": "Pod disruption budget"
    },
    "podAnnotations": {
      "type": "object",
      "title": "Pod Annotations",
      "description": "Pod annotations"
    },
    "podSecurityContext": {
      "type": "object",
      "title": "Pod Security Context",
      "description": "Pod security context"
    },
    "securityContext": {
      "type": "object",
      "title": "Security Context",
      "description": "Security context"
    },
    "service": {
      "type": "object",
      "additionalProperties": true,
      "title": "Service",
      "description": "Service",
      "properties": {
        "type": {
          "type": "string",
          "title": "Type",
          "description": "Service type"
        },
        "port": {
          "type": "integer",
          "title": "Port",
          "description": "Service port"
        },
        "targetPort": {
          "type": "integer",
          "title": "Target Port",
          "description": "Service target port"
        }
      }
    },
    "serviceMonitor": {
      "type": "object",
      "title": "Service Monitor",
      "description": "Service monitor",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable service monitor"
        },
        "additionalLabels": {
          "type": "object",
          "title": "Additional Labels",
          "description": "Prometheus rule additional labels"
        },
        "interval": {
          "type": "string",
          "title": "Interval",
          "description": "Service monitor interval"
        },
        "scrapeTimeout": {
          "type": "string",
          "title": "Timeout",
          "description": "Service monitor timeout"
        },
        "metricRelabelings": {
          "type": "array",
          "title": "Metric Relabelings",
          "description": "Service monitor metric relabelings"
        },
        "relabelings": {
          "type": "array",
          "title": "Relabelings",
          "description": "Service monitor relabelings"
        }
      }
    },
    "prometheusRule": {
      "type": "object",
      "title": "Prometheus Rule",
      "description": "Prometheus rule",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable prometheus rule"
        },
        "additionalLabels": {
          "type": "object",
          "title": "Additional Labels",
          "description": "Prometheus rule additional labels"
        },
        "rules": {
          "type": "array",
          "title": "Rules",
          "description": "Prometheus rule rules"
        }
      }
    },
    "livenessProbe": {
      "type": "boolean",
      "title": "Liveness Probe",
      "description": "Enable liveness probe"
    },
    "readinessProbe": {
      "type": "boolean",
      "title": "Readiness Probe",
      "description": "Enable readiness probe"
    },
    "ingress": {
      "type": "object",
      "title": "Ingress",
      "description": "Ingress",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable ingress"
        },
        "className": {
          "type": "string",
          "title": "Class Name",
          "description": "Ingress class name"
        },
        "annotations": {
          "type": "object",
          "title": "Annotations",
          "description": "Ingress annotations"
        },
        "hosts": {
          "type": "array",
          "title": "Hosts",
          "description": "Ingress hosts"
        },
        "tls": {
          "type": "array",
          "title": "TLS",
          "description": "Ingress TLS"
        }
      }
    },
    "resources": {
      "type": "object",
      "title": "Resources",
      "description": "Resources"
    },
    "autoscaling": {
      "type": "object",
      "title": "Autoscaling",
      "description": "Autoscaling",
      "properties": {
        "enabled": {
          "type": "boolean",
          "title": "Enabled",
          "description": "Enable autoscaling"
        },
        "minReplicas": {
          "type": "integer",
          "title": "Min Replicas",
          "description": "Autoscaling min replicas"
        },
        "maxReplicas": {
          "type": "integer",
          "title": "Max Replicas",
          "description": "Autoscaling max replicas"
        },
        "targetCPUUtilizationPercentage": {
          "type": "integer",
          "title": "Target CPU Utilization Percentage",
          "description": "Autoscaling target CPU utilization percentage"
        }
      }
    },
    "nodeSelector": {
      "type": "object",
      "title": "Node Selector",
      "description": "Node selector"
    },
    "tolerations": {
      "type": "array",
      "title": "Tolerations",
      "description": "Tolerations"
    },
    "affinity": {
      "type": "object",
      "title": "Affinity",
      "description": "Affinity"
    },
    "common": {
      "type": "object",
      "title": "Common",
      "description": "common configuration.  Not set by user but required as common vars are passed to all manifests."
    },
    "global": {
      "type": "object",
      "title": "Global",
      "description": "global configuration.  Not set by user but required when prefect is referenced as a downstream Chart"
    }
  }
}
