{{- if .Values.backgroundServices.runAsSeparateDeployment }}
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}-background-services
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: background-services
    prefect-version: {{ .Chart.AppVersion }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  revisionHistoryLimit: {{ .Values.backgroundServices.revisionHistoryLimit }}
  replicas: 1
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: background-services
  template:
    metadata:
      {{- if .Values.backgroundServices.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: background-services
        prefect-version: {{ .Chart.AppVersion }}
        {{- if .Values.backgroundServices.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.global.prefect.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.prefect.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ if .Values.backgroundServices.serviceAccount.create }}{{ template "backgroundServices.serviceAccountName" . }}{{ else if .Values.backgroundServices.serviceAccount.name }}{{ .Values.backgroundServices.serviceAccount.name }}{{ else }}{{ template "server.serviceAccountName" . }}{{ end }}
      {{- if .Values.backgroundServices.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.backgroundServices.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backgroundServices.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.backgroundServices.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backgroundServices.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.backgroundServices.podSecurityContext }}
      securityContext: {{- .Values.backgroundServices.podSecurityContext | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.backgroundServices.priorityClassName }}
      priorityClassName: {{ .Values.backgroundServices.priorityClassName }}
      {{- end }}
      containers:
        - name: prefect-background-services
          image: "{{ .Values.global.prefect.image.repository }}:{{ .Values.global.prefect.image.prefectTag }}"
          imagePullPolicy: {{ .Values.global.prefect.image.pullPolicy }}
          command:
            - /usr/bin/tini
            - -g
            - --
            - /opt/prefect/entrypoint.sh
          args:
            - prefect
            - server
            - services
            - start
          workingDir: /home/prefect
          env:
            - name: HOME
              value: /home/prefect
            - name: PREFECT_DEBUG_MODE
              value: {{ .Values.backgroundServices.debug | quote }}
            - name: PREFECT_LOGGING_SERVER_LEVEL
              value: {{ .Values.backgroundServices.loggingLevel | quote }}
            - name: PREFECT_UI_ENABLED
              value: 'false'
            - name: PREFECT_API_DATABASE_CONNECTION_URL
              {{- if .Values.sqlite.enabled }}
              value: "sqlite+aiosqlite:////data/prefect.db"
              {{- else }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "server.postgres-string-secret-name" . }}
                  key: connection-string
              {{- end }}
            {{- if .Values.global.prefect.env }}
            {{- include "common.tplvalues.render" (dict "value" .Values.global.prefect.env "context" $) | nindent 12 }}
            {{- end }}
            {{- if .Values.backgroundServices.env }}
            {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.env "context" $) | nindent 12 }}
            {{- end }}
          envFrom:
            {{- if .Values.backgroundServices.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backgroundServices.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.backgroundServices.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backgroundServices.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if .Values.backgroundServices.resources }}
          resources: {{- toYaml .Values.backgroundServices.resources | nindent 12 }}
          {{- end }}
          {{- with .Values.backgroundServices.containerSecurityContext }}
          securityContext: {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /home/prefect
              name: scratch
              subPathExpr: home
            - mountPath: /tmp
              name: scratch
              subPathExpr: tmp
            {{- if .Values.sqlite.enabled }}
            - mountPath: /data
              name: sqlite-storage
            {{- end }}
          {{- if .Values.backgroundServices.extraVolumeMounts }}
          {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
        {{- if .Values.backgroundServices.extraContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.extraContainers "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: scratch
          emptyDir: {}
        {{- if .Values.sqlite.enabled }}
        - name: sqlite-storage
          persistentVolumeClaim:
            claimName: {{ template "common.names.fullname" . }}-sqlite
        {{- end }}
        {{- if .Values.backgroundServices.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" .Values.backgroundServices.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}