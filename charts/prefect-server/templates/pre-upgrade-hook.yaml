{{- if and .Values.backgroundServices.runAsSeparateDeployment (not .Values.sqlite.enabled) .Values.migrations.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "common.names.fullname" . }}-db-migrations
  namespace: {{ .Release.Namespace }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    prefect-version: {{ .Chart.AppVersion }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: pre-upgrade-hook
  annotations:
    "helm.sh/hook": post-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  {{- if .Values.migrations.timeoutSeconds }}
  activeDeadlineSeconds: {{ .Values.migrations.timeoutSeconds }}
  {{- end }}
  backoffLimit: {{ .Values.migrations.backoffLimit }}
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: pre-upgrade-hook
        prefect-version: {{ .Chart.AppVersion }}
        {{- if .Values.migrations.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.migrations.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "server.serviceAccountName" . }}
      restartPolicy: {{ .Values.migrations.restartPolicy }}
      containers:
      - name: pre-upgrade-migration
        image: "{{ .Values.global.prefect.image.repository }}:{{ .Values.global.prefect.image.prefectTag }}"
        imagePullPolicy: {{ .Values.global.prefect.image.pullPolicy }}
        {{- if .Values.migrations.entrypoint }}
        command: {{- toYaml .Values.migrations.entrypoint | nindent 10 }}
        {{- end }}
        args:
        - |
          set -eo pipefail
          echo "Starting database migration..."
          {{- tpl .Values.migrations.command . | nindent 10 }}
        env:
        - name: PREFECT_API_DATABASE_CONNECTION_URL
          valueFrom:
            secretKeyRef:
              name: {{ include "server.postgres-string-secret-name" . }}
              key: connection-string
        {{- if .Values.global.prefect.env }}
        {{- include "common.tplvalues.render" (dict "value" .Values.global.prefect.env "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.server.env }}
        {{- include "common.tplvalues.render" (dict "value" .Values.server.env "context" $) | nindent 8 }}
        {{- end }}
        {{- if .Values.migrations.env }}
        {{- include "common.tplvalues.render" (dict "value" .Values.migrations.env "context" $) | nindent 8 }}
        {{- end }}
        resources: {{- toYaml .Values.migrations.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.migrations.securityContext | nindent 10 }}
        {{- if .Values.migrations.extraVolumeMounts }}
        volumeMounts: {{- toYaml .Values.migrations.extraVolumeMounts | nindent 10 }}
        {{- end }}
      {{- if .Values.migrations.extraVolumes }}
      volumes: {{- toYaml .Values.migrations.extraVolumes | nindent 8 }}
      {{- end }}
      {{- if .Values.migrations.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.migrations.affinity "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.migrations.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.migrations.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.migrations.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.migrations.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.global.prefect.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.prefect.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
{{- end }}
