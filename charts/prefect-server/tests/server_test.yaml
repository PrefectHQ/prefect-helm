suite: Server configuration
release:
  name: test
  namespace: prefect

tests:
  - it: Should set the correct image and tag
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].image
          value: prefecthq/prefect:3-latest

  - it: Should set custom image and tag
    set:
      server:
        image:
          repository: custom/prefect
          prefectTag: v2.0.0
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].image
          value: custom/prefect:v2.0.0

  - it: Should set the correct API URL
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_API_URL")].value
          value: "http://localhost:4200/api"

  - it: Should set a custom API URL
    set:
      server:
        prefectApiUrl: "https://custom-api.example.com"
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_API_URL")].value
          value: "https://custom-api.example.com"

  - it: Should set the correct API host
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_SERVER_API_HOST")].value
          value: "0.0.0.0"

  - it: Should set a custom API host
    set:
      server:
        prefectApiHost: "127.0.0.1"
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_SERVER_API_HOST")].value
          value: "127.0.0.1"

  - it: Should set the correct debug mode
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_DEBUG_MODE")].value
          value: "false"

  - it: Should enable debug mode
    set:
      server:
        debug: true
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_DEBUG_MODE")].value
          value: "true"

  - it: Should set the correct logging level
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_LOGGING_SERVER_LEVEL")].value
          value: "WARNING"

  - it: Should set a custom logging level
    set:
      server:
        loggingLevel: "DEBUG"
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_LOGGING_SERVER_LEVEL")].value
          value: "DEBUG"

  - it: Should set the correct UI configuration
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_UI_ENABLED")].value
          value: "true"
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_UI_STATIC_DIRECTORY")].value
          value: "/ui_build"

  - it: Should disable the UI
    set:
      server:
        uiConfig:
          enabled: false
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_UI_ENABLED")].value
          value: "false"

  - it: Should set custom UI API URL and UI URL
    set:
      server:
        uiConfig:
          prefectUiApiUrl: "https://custom-ui-api.example.com"
          prefectUiUrl: "https://custom-ui.example.com"
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_UI_API_URL")].value
          value: "https://custom-ui-api.example.com"
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.containers[0].env[?(@.name == "PREFECT_UI_URL")].value
          value: "https://custom-ui.example.com"

  - it: Should set the correct security context
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.runAsUser
          value: 1001
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.runAsNonRoot
          value: true
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.fsGroup
          value: 1001

  - it: Should set custom security context
    set:
      server:
        podSecurityContext:
          runAsUser: 2000
          runAsNonRoot: false
          fsGroup: 3000
    asserts:
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.runAsUser
          value: 2000
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.runAsNonRoot
          value: false
      - template: deployment.yaml
        equal:
          path: .spec.template.spec.securityContext.fsGroup
          value: 3000